name: Deploy to Railway

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Install web dependencies
        run: |
          cd web
          npm install

      - name: Run backend tests
        run: |
          cd backend
          npm run test || echo "Tests skipped"

      - name: Build backend
        run: |
          cd backend
          npm run build || echo "Build not required"

      - name: Build web
        run: |
          cd web
          npm run build || echo "Web build skipped"

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway (Staging)
        uses: bervProject/railway-deploy@v1.0.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN_STAGING }}
          service: 'oipet-saude-backend-staging'

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway (Production)
        uses: bervProject/railway-deploy@v1.0.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: 'oipet-saude-backend'

      - name: Health Check
        run: |
          sleep 30
          curl -f https://oipet-saude-production.up.railway.app/health || exit 1

      - name: Notify Success
        if: success()
        run: |
          echo "‚úÖ Deploy realizado com sucesso!"
          echo "üåê URL: https://oipet-saude-production.up.railway.app"